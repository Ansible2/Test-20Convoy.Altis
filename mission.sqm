version=54;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=1;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=30;
	};
	class Camera
	{
		pos[]={3422.2739,12.908844,13204.717};
		dir[]={0.89926285,-0.37974986,0.21706307};
		up[]={0.36914814,0.92508918,0.089104563};
		aside[]={0.23464015,0,-0.97208226};
	};
};
binarizationWanted=0;
sourceName="test%20convoy";
addons[]=
{
	"A3_Characters_F",
	"A3_Soft_F_MRAP_01",
	"A3_Misc_F_Helpers",
	"A3_Soft_F_Beta_Truck_01",
	"A3_Soft_F_Exp_Truck_01",
	"A3_Characters_F_Exp",
	"A3_Modules_F_Curator_Curator"
};
class AddonsMetaData
{
	class List
	{
		items=7;
		class Item0
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item1
		{
			className="A3_Soft_F";
			name="Arma 3 Alpha - Unarmored Land Vehicles";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Misc_F";
			name="Arma 3 - 3D Aids and Helpers";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item3
		{
			className="A3_Soft_F_Beta";
			name="Arma 3 Beta - Unarmored Land Vehicles";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item4
		{
			className="A3_Soft_F_Exp";
			name="Arma 3 Apex - Unarmored Land Vehicles";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item5
		{
			className="A3_Characters_F_Exp";
			name="Arma 3 Apex - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item6
		{
			className="A3_Modules_F_Curator";
			name="Arma 3 Zeus Update - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
	};
};
dlcs[]=
{
	"Expansion"
};
randomSeed=11300872;
class ScenarioData
{
	author="Ansible2";
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="ENH_AddObjectsToZeus";
			expression="    if (!is3DEN && isServer && _value && !(allCurators isEqualTo [])) then    {      [] spawn      {        scriptName 'ENH_Attribute_AddObjectsToZeus';        while {true} do        {          {          _x addCuratorEditableObjects            [              entities [[], ['Logic'], true],              true            ];          } count allCurators;          sleep 60;        };      };    }";
			class Value
			{
				class data
				{
					singleType="BOOL";
					value=1;
				};
			};
		};
		class Attribute1
		{
			property="ENH_SPR";
			expression="if (!is3DEN && _value # 0 > 0 && !isMultiplayer) then      {        ENH_SPR_Ruleset = _value param [0, 0];        ENH_SPR_Delay = _value param [1, 20];        ENH_SPR_CanDie = _value param [2, false];        ENH_SPR_RestoreLoadout = _value param [3, false];        ENH_SPR_OnRespawnCode = compile (_value param [4, '']);        ENH_SPR_Positions =        [          allMapMarkers select {'respawn_east' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_west' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_guerilla' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_civilian' in toLower _x} apply {getMarkerPos _x}        ];        {          _x setVariable ['ENH_SPR_OriginalSide', side group _x];          _x setVariable ['ENH_SPR_OriginalLoadout', getUnitLoadout _x];          _x addEventHandler ['handleDamage',          {            params ['_unit', '', '_damage', '', '', '_index'];            if (!alive _unit || lifeState _unit isEqualTo 'INCAPACITATED') exitWith {0};            if (_unit getVariable ['ENH_SPR_Tickets', 0] == 0) then            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              _damage;            };            if (ENH_SPR_CanDie && _index in [1, 2] && _damage >= 1) exitWith            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              1;            };            if (_index < 8 && (_damage min 0.95) == 0.95) then            {              setAccTime 1;              _unit allowDamage false;              _unit setCaptive true;              _unit setUnconscious true;              _unit setVariable ['ENH_SPR_Tickets', (_unit getVariable ['ENH_SPR_Tickets', 0]) - 1];              if (isPlayer _unit) then {enableTeamSwitch false} else {removeSwitchableUnit _unit};              moveOut _unit;              _unit spawn ENH_fnc_SPR_respawnTimer;            };            _damage min 0.95;          }];        } forEach (allUnits select {_x getVariable ['ENH_SPR_Tickets', 0] > 0});                ENH_fnc_SPR_respawn =        {          scriptName 'ENH_Attribute_SPR_Respawn';          params ['_unit'];          if (isPlayer _unit) then {enableTeamSwitch true} else {addSwitchableUnit _unit};          if (ENH_SPR_RestoreLoadout) then {_unit setUnitLoadout (_unit getVariable 'ENH_SPR_OriginalLoadout')};          private _sideID = (_unit getVariable 'ENH_SPR_OriginalSide') call BIS_fnc_sideID;          private _positions = ENH_SPR_Positions select _sideID;          if (_positions isNotEqualTo []) then          {            switch (ENH_SPR_Ruleset) do            {              case 3:              {                _unit setPos (([_positions, [], {_unit distance _x}, 'ASCEND'] call BIS_fnc_sortBy) select 0);              };              case 2:              {                _unit setPos selectRandom _positions;              };            };          };          _unit setUnconscious false;          _unit allowDamage true;          _unit setDamage 0;          _unit switchMove '';          _unit call ENH_SPR_OnRespawnCode;          _unit spawn          {            sleep 8;            _this setCaptive false;          };        };                ENH_fnc_SPR_respawnTimer =        {          scriptName 'ENH_Attribute_SPR_RespawnTimer';          params ['_unit'];          private _respawnTime = time + ENH_SPR_Delay;          if (isPlayer _unit) then          {            private _ctrlRespawnTimer = (call BIS_fnc_displayMission) ctrlCreate ['RscStructuredText',-1];            _ctrlRespawnTimer ctrlSetPosition [0.25, 0, 0.5, 0.06];            _ctrlRespawnTimer ctrlSetBackgroundColor [0, 0, 0, 0.1];            _ctrlRespawnTimer ctrlCommit 0;            ENH_SPR_OriginalVolume = [soundVolume, musicVolume, radioVolume, speechVolume, environmentVolume];            0 cutText ['', 'BLACK OUT', 0.3];            0.3 fadeSound 0;            0.3 fadeMusic 0;            0.3 fadeRadio 0;            0.3 fadeSpeech 0;            0.3 fadeEnvironment 0;            showChat false;            while {time < _respawnTime} do            {              _ctrlRespawnTimer ctrlSetStructuredText parseText format ['<t size=''1.25'' color=''#218a36'' align=''center''>%1</t>', [(_respawnTime - time), 'HH:MM'] call BIS_fnc_timeToString];              sleep 0.1;            };            ctrlDelete _ctrlRespawnTimer;            0 cutText ['', 'BLACK IN', 8];            8 fadeSound (ENH_SPR_OriginalVolume # 0);            8 fadeMusic (ENH_SPR_OriginalVolume # 1);            8 fadeRadio (ENH_SPR_OriginalVolume # 2);            8 fadeSpeech (ENH_SPR_OriginalVolume # 3);            8 fadeEnvironment (ENH_SPR_OriginalVolume # 4);            showChat true;            [              ['Respawned'],              [format ['GRID: %1', mapGridPosition _unit]],              [format ['Tickets left: %1', _unit getVariable 'ENH_SPR_Tickets']]            ] spawn BIS_fnc_EXP_camp_SITREP;          }          else          {            if ((side player getFriend (_unit getVariable 'ENH_SPR_OriginalSide')) >= 0.6) then            {              [                str _unit, 'onEachFrame',                {                  drawIcon3D ['\a3\Modules_f\data\portraitRespawn_ca.paa', [0.13, 0.54, 0.21, 0.8], ASLToAGL ((_this # 0) modelToWorldVisualWorld [0, 0, 1]), 1, 1, 0, str round ((_this # 1) - time), 2];                },                [_unit, _respawnTime]              ] call BIS_fnc_addStackedEventHandler;            };            sleep ENH_SPR_Delay;          };          [str _unit, 'onEachFrame'] call BIS_fnc_removeStackedEventHandler;          _unit call ENH_fnc_SPR_respawn;        };      }";
			class Value
			{
				class data
				{
					singleType="ARRAY";
					class value
					{
						items=5;
						class Item0
						{
							class data
							{
								singleType="SCALAR";
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								singleType="SCALAR";
								value=20;
							};
						};
						class Item2
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item3
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item4
						{
							class data
							{
								singleType="STRING";
								value="";
							};
						};
					};
				};
			};
		};
		nAttributes=2;
	};
};
class Mission
{
	class Intel
	{
		timeOfChanges=1800.0002;
		startWeather=0.30000001;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0.30000001;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		year=2035;
		month=6;
		day=24;
		hour=12;
		minute=0;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=13;
		class Item0
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={3447.4988,2.771343,13218.773};
						angles[]={0.015994642,2.1478353,0};
					};
					side="West";
					flags=6;
					class Attributes
					{
						name="vicD";
						isPlayer=1;
					};
					id=2;
					type="B_Soldier_F";
					atlOffset=-0.00050592422;
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=2;
						item1=14;
						class CustomData
						{
							role=2;
							turretPath[]={0};
						};
					};
				};
			};
			id=0;
			atlOffset=-0.00050592422;
		};
		class Item1
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={3452.0698,5.1879015,13198.966};
				angles[]={0.0080009829,2.3399789,0.0066682254};
			};
			side="West";
			flags=6;
			class Attributes
			{
				name="vic1";
			};
			id=1;
			type="B_MRAP_01_F";
			atlOffset=-0.00022792816;
		};
		class Item2
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={3527.864,2.2304122,13293.919};
						angles[]={0.015994642,4.0101385,0};
					};
					side="West";
					flags=6;
					class Attributes
					{
					};
					id=15;
					type="B_Soldier_F";
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=15;
						item1=14;
						class CustomData
						{
							role=1;
						};
					};
				};
			};
			id=3;
			atlOffset=-0.00050592422;
		};
		class Item3
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={25371.219,12.404957,19460.123};
						angles[]={0.022662206,3.9962461,6.2818484};
					};
					side="West";
					flags=2;
					class Attributes
					{
						name="vic3D";
					};
					id=7;
					type="B_Soldier_F";
					atlOffset=0.275383;
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=7;
						item1=8;
						class CustomData
						{
							role=1;
						};
					};
				};
			};
			id=6;
			atlOffset=-9.6082687e-005;
		};
		class Item4
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={3461.1738,4.7019196,13233.07};
				angles[]={0.022662206,3.9962461,6.2818484};
			};
			side="West";
			flags=6;
			class Attributes
			{
				name="vic3";
			};
			id=8;
			type="B_MRAP_01_F";
			atlOffset=-9.6082687e-005;
		};
		class Item5
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={25397.994,14.342486,19485.172};
						angles[]={0.0080009829,2.3399789,0.0066682254};
					};
					side="West";
					flags=7;
					class Attributes
					{
						name="vic1D";
					};
					id=10;
					type="B_support_AMort_F";
					atlOffset=-4.9591064e-005;
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=10;
						item1=1;
						class CustomData
						{
							role=1;
						};
					};
				};
			};
			id=9;
			atlOffset=-0.00022792816;
		};
		class Item6
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={4376.854,58.819366,16896.795};
				angles[]={6.1703324,0,0.0066671576};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="movePos";
			};
			id=12;
			type="Sign_Arrow_Large_Blue_F";
			atlOffset=3.8146973e-006;
		};
		class Item7
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={3447.4988,4.99441,13218.759};
				angles[]={0.015994642,4.0101385,0};
			};
			side="West";
			flags=6;
			class Attributes
			{
				name="vic2";
			};
			id=14;
			type="B_Truck_01_transport_F";
			atlOffset=-0.00050592422;
		};
		class Item8
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={3571.6221,4.4339533,13338.964};
						angles[]={0.019996032,3.9478126,0.0013372133};
					};
					side="West";
					flags=6;
					class Attributes
					{
					};
					id=27;
					type="B_T_Soldier_F";
					atlOffset=-4.7683716e-007;
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=27;
						item1=26;
						class CustomData
						{
							role=1;
						};
					};
				};
			};
			id=16;
			atlOffset=-0.0028157234;
		};
		class Item9
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={3557.0454,4.032794,13322.399};
						angles[]={0.018660666,3.9243181,0};
					};
					side="West";
					flags=6;
					class Attributes
					{
						name="vic5D";
					};
					id=24;
					type="B_Soldier_F";
					atlOffset=0.12728262;
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=24;
						item1=25;
						class CustomData
						{
							role=1;
						};
					};
				};
			};
			id=23;
			atlOffset=-0.0017514229;
		};
		class Item10
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={3492.2603,4.4264603,13263.052};
				angles[]={0.018660666,3.9243181,0};
			};
			side="West";
			flags=6;
			class Attributes
			{
				name="vic5";
			};
			id=25;
			type="B_Truck_01_transport_F";
			atlOffset=-0.0017514229;
		};
		class Item11
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={3474.6179,4.712039,13245.595};
				angles[]={0.019996032,3.9478126,0.0013372133};
			};
			side="West";
			flags=6;
			class Attributes
			{
				name="vic4";
			};
			id=26;
			type="B_T_Truck_01_Repair_F";
			atlOffset=-0.0028157234;
		};
		class Item12
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={3434.906,3.1543553,13197.202};
			};
			id=29;
			type="ModuleCurator_F";
			atlOffset=3.7670135e-005;
			class CustomAttributes
			{
				class Attribute0
				{
					property="ModuleCurator_F_Owner";
					expression="_this setVariable ['Owner',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="#adminLogged";
						};
					};
				};
				class Attribute1
				{
					property="ModuleCurator_F_Forced";
					expression="_this setVariable ['Forced',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute2
				{
					property="ModuleCurator_F_Name";
					expression="_this setVariable ['Name',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="";
						};
					};
				};
				class Attribute3
				{
					property="ModuleCurator_F_Addons";
					expression="_this setVariable ['Addons',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=3;
						};
					};
				};
				nAttributes=4;
			};
		};
	};
};
